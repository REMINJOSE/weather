{"ast":null,"code":"var _jsxFileName = \"/zfsz1/Config/CodeServer/workspace/weatherapp/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport Search from './components/search';\nimport Alert from './components/Alert';\nimport Weather from './components/Weather';\nimport { setAlert } from './store/actions/alertActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const weatherData = useSelector(state => state.weather.data);\n  const loading = useSelector(state => state.weather.loading);\n  const error = useSelector(state => state.weather.error);\n  const alertMsg = useSelector(state => state.alert.message);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"has-text-centered\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      title: \"Enter city name and press search button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"is-size3 py-2\",\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this) : weatherData && /*#__PURE__*/_jsxDEV(Weather, {\n      data: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 72\n    }, this), alertMsg && /*#__PURE__*/_jsxDEV(Alert, {\n      message: alertMsg,\n      onClose: () => dispatch(setAlert)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"mE8Q87r5bzt54oAumEw2CKJ2jKU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/zfsz1/Config/CodeServer/workspace/weatherapp/src/App.tsx"],"names":["React","useDispatch","useSelector","Search","Alert","Weather","setAlert","App","dispatch","weatherData","state","weather","data","loading","error","alertMsg","alert","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAuB,OAAvB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;AACA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,QAAR,QAAuB,8BAAvB;;;AAIA,MAAMC,GAAM,GAAC,MAAK;AAAA;;AAChB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,WAAW,GAACP,WAAW,CAAEQ,KAAD,IAAmBA,KAAK,CAACC,OAAN,CAAcC,IAAlC,CAA7B;AACA,QAAMC,OAAO,GAACX,WAAW,CAAEQ,KAAD,IAAmBA,KAAK,CAACC,OAAN,CAAcE,OAAlC,CAAzB;AACA,QAAMC,KAAK,GAACZ,WAAW,CAAEQ,KAAD,IAAmBA,KAAK,CAACC,OAAN,CAAcG,KAAlC,CAAvB;AACA,QAAMC,QAAQ,GAACb,WAAW,CAAEQ,KAAD,IAAmBA,KAAK,CAACM,KAAN,CAAYC,OAAhC,CAA1B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,OAAO,gBAAC;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAD,GAA4CJ,WAAW,iBAAE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAIA;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFnE,EAGGM,QAAQ,iBAAG,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEA,QAAhB;AAA0B,MAAA,OAAO,EAAE,MAAIP,QAAQ,CAACF,QAAD;AAA/C;AAAA;AAAA;AAAA;AAAA,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAbD;;GAAMC,G;UACaN,W,EACCC,W,EACJA,W,EACFA,W,EACGA,W;;;KALXK,G;AAeN,eAAeA,GAAf","sourcesContent":["import React,{FC} from 'react';\nimport {useDispatch, useSelector} from  'react-redux'\nimport './App.css';\nimport {RootState} from './store'\nimport Search from './components/search'\nimport Alert from './components/Alert'\nimport Weather from './components/Weather'\nimport {setAlert} from './store/actions/alertActions'\nimport {setError} from './store/actions/weatherActions'\n\n\nconst App:FC=()=> {\n  const dispatch = useDispatch()\n  const weatherData=useSelector((state:RootState)=>state.weather.data);\n  const loading=useSelector((state:RootState)=>state.weather.loading);\n  const error=useSelector((state:RootState)=>state.weather.error);\n  const alertMsg=useSelector((state:RootState)=>state.alert.message);\n  return (\n    <div className=\"has-text-centered\">\n      <Search title='Enter city name and press search button'/>\n      {loading?<h2 className=\"is-size3 py-2\">Loading</h2>:weatherData&&<Weather data = {weatherData}/>}\n      {alertMsg &&<Alert message={alertMsg} onClose={()=>dispatch(setAlert)}/>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}