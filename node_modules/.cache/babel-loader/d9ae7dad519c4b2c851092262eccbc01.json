{"ast":null,"code":"export let ActionType;\n\n(function (ActionType) {\n  ActionType[\"GET_WEATHER\"] = \"GET_WEATHER\";\n  ActionType[\"SET_LOADING\"] = \"SET_LOADING\";\n  ActionType[\"SET_ERROR\"] = \"SET_ERROR\";\n  ActionType[\"SET_ALERT\"] = \"SET_ALERT\";\n})(ActionType || (ActionType = {}));","map":{"version":3,"sources":["/zfsz1/Config/CodeServer/workspace/weatherapp/src/store/types.ts"],"names":["ActionType"],"mappings":"AAAA,WAAYA,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U","sourcesContent":["export enum ActionType {\n    GET_WEATHER = 'GET_WEATHER',\n    SET_LOADING='SET_LOADING',\n    SET_ERROR = 'SET_ERROR',\n    SET_ALERT = 'SET_ALERT',\n}\n\nexport interface Weather{\n    description:string;\n    icon:string;\n    id:number;\n    main:string;\n}\nexport interface WeatherData{\n    base:string;\n    clouds:{\n        all:number;\n    };\n    cod:number;\n    coord:{\n        lon:number;\n        lan:number;\n    };\n    dt:number;\n    id:number;\n    main:{\n        feels_like:number;\n        humidity:number;\n        pressure:number;\n        temp:number;\n        temp_max:number;\n        temp_min:number;\n    };\n    name:string;\n    sys:{\n        country:string;\n        id:number;\n        sunrise:number;\n        sunset:number;\n        type:number;\n    };\n    timezone:number;\n    visibility:number;\n    weather:Weather[];\n    wind:{\n        speed:number;\n        deg:number;\n    };\n}\n\nexport interface WeatherError{\n    cod:string;\n    message:string;\n}\nexport interface WeatherState{\n    data:WeatherData|null;\n    loading:boolean;\n    error:string;\n}\ninterface GetWeatherAction{\n    type:typeof ActionType.GET_WEATHER;\n    payload:WeatherData;\n}\ninterface SetLoadingAction{\n    type:typeof ActionType.SET_LOADING;\n}\ninterface SetErrorAction{\n    type:typeof ActionType.SET_ERROR;\n    payload:string;\n}\nexport type WeatherAction = GetWeatherAction| SetLoadingAction|SetErrorAction;\n\nexport interface AlertAction{\n    type:typeof ActionType.SET_ALERT;\n    payload:string;\n}\nexport interface AlertState{\n    message:string;\n}"]},"metadata":{},"sourceType":"module"}